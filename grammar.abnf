definition  = name constraints [variables ","] properties
name        = "def" symbol
constraints = "where" constraint *("," constraint)
properties  = statement *("," statement)
property    = [variables] statement

constraint    = symbol ":" type
type          = symbol / function_type
function_type = set_expression "->" set_expression

variables    = *1(variable)
variable     = universal / existence
universal    = "forall" symbol_list "in" set_expression "then"
existence    = "exist" symbol_list "in" set_expression "st"
symbol_list  = symbol *("," symbol)

statement  = *1(symbol)
symbol     = *1(ALPHA / DIGIT / "+" / "-" / "*" / "/" / "^" / "_")

set_expression =