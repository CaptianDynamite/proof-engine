statement = condition

setbuilder = "{" symdec "|" condition *("," (expr / symdec)) "}"
setlist    = "{" [ atomic *("," atomic) ] "}"

symdec = symbol [ "in" set ]

condition = subsetin / expr
subsetin  = symbol ("in" / "subset" / "subseteq") symbol
expr      = brackets [( "=" / "!=" / "<" / ">" / ">=" / "<=") atomic]

brackets   = ("(" exponents ")") / exponents
exponents  = muldiv ["^" atomic]
muldiv     = addsub [( "*" / "/" ) atomic]
addsub     = atomic [( "+" / "-" ) atomic]

atomic   = symbol / brackets / ("-" atomic) / set
set      = setbuilder / setlist / symbol
symbol = *1(ALPHA / DIGIT)

quantifier = "exists" / "forall"
implies    = "implies"